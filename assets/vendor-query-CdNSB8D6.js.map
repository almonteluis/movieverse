{"version":3,"file":"vendor-query-CdNSB8D6.js","sources":["../../node_modules/@tanstack/query-core/build/modern/subscribable.js","../../node_modules/@tanstack/query-core/build/modern/utils.js","../../node_modules/@tanstack/query-core/build/modern/focusManager.js","../../node_modules/@tanstack/query-core/build/modern/onlineManager.js","../../node_modules/@tanstack/query-core/build/modern/thenable.js","../../node_modules/@tanstack/query-core/build/modern/retryer.js","../../node_modules/@tanstack/query-core/build/modern/notifyManager.js","../../node_modules/@tanstack/query-core/build/modern/removable.js","../../node_modules/@tanstack/query-core/build/modern/query.js","../../node_modules/@tanstack/query-core/build/modern/queryCache.js","../../node_modules/@tanstack/query-core/build/modern/mutation.js","../../node_modules/@tanstack/query-core/build/modern/mutationCache.js","../../node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js","../../node_modules/@tanstack/query-core/build/modern/queryClient.js","../../node_modules/@tanstack/query-core/build/modern/queryObserver.js","../../node_modules/@tanstack/query-core/build/modern/infiniteQueryObserver.js","../../node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js","../../node_modules/@tanstack/react-query/build/modern/isRestoring.js","../../node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js","../../node_modules/@tanstack/react-query/build/modern/utils.js","../../node_modules/@tanstack/react-query/build/modern/errorBoundaryUtils.js","../../node_modules/@tanstack/react-query/build/modern/suspense.js","../../node_modules/@tanstack/react-query/build/modern/useBaseQuery.js","../../node_modules/@tanstack/react-query/build/modern/useQuery.js","../../node_modules/@tanstack/react-query/build/modern/useInfiniteQuery.js"],"sourcesContent":["// src/subscribable.ts\nvar Subscribable = class {\n  constructor() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n  subscribe(listener) {\n    this.listeners.add(listener);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(listener);\n      this.onUnsubscribe();\n    };\n  }\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n  onSubscribe() {\n  }\n  onUnsubscribe() {\n  }\n};\nexport {\n  Subscribable\n};\n//# sourceMappingURL=subscribable.js.map","// src/utils.ts\nvar isServer = typeof window === \"undefined\" || \"Deno\" in globalThis;\nfunction noop() {\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction resolveStaleTime(staleTime, query) {\n  return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\n}\nfunction resolveEnabled(enabled, query) {\n  return typeof enabled === \"function\" ? enabled(query) : enabled;\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = \"all\",\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n  if (type !== \"all\") {\n    const isActive = query.isActive();\n    if (type === \"active\" && !isActive) {\n      return false;\n    }\n    if (type === \"inactive\" && isActive) {\n      return false;\n    }\n  }\n  if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n    return false;\n  }\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const { exact, status, predicate, mutationKey } = filters;\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n  if (status && mutation.state.status !== status) {\n    return false;\n  }\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = options?.queryKeyHashFn || hashKey;\n  return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n  return JSON.stringify(\n    queryKey,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : val\n  );\n}\nfunction partialMatchKey(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    return !Object.keys(b).some((key) => !partialMatchKey(a[key], b[key]));\n  }\n  return false;\n}\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n  const array = isPlainArray(a) && isPlainArray(b);\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    const aItems = array ? a : Object.keys(a);\n    const aSize = aItems.length;\n    const bItems = array ? b : Object.keys(b);\n    const bSize = bItems.length;\n    const copy = array ? [] : {};\n    let equalItems = 0;\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i];\n      if ((!array && aItems.includes(key) || array) && a[key] === void 0 && b[key] === void 0) {\n        copy[key] = void 0;\n        equalItems++;\n      } else {\n        copy[key] = replaceEqualDeep(a[key], b[key]);\n        if (copy[key] === a[key] && a[key] !== void 0) {\n          equalItems++;\n        }\n      }\n    }\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n  return b;\n}\nfunction shallowEqualObjects(a, b) {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (ctor === void 0) {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(timeout) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, timeout);\n  });\n}\nfunction replaceData(prevData, data, options) {\n  if (typeof options.structuralSharing === \"function\") {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    if (process.env.NODE_ENV !== \"production\") {\n      try {\n        return replaceEqualDeep(prevData, data);\n      } catch (error) {\n        console.error(\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`\n        );\n      }\n    }\n    return replaceEqualDeep(prevData, data);\n  }\n  return data;\n}\nfunction keepPreviousData(previousData) {\n  return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n  const newItems = [...items, item];\n  return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n  const newItems = [item, ...items];\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\nvar skipToken = Symbol();\nfunction ensureQueryFn(options, fetchOptions) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`\n      );\n    }\n  }\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise;\n  }\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () => Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\n  }\n  return options.queryFn;\n}\nexport {\n  addToEnd,\n  addToStart,\n  ensureQueryFn,\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  isPlainArray,\n  isPlainObject,\n  isServer,\n  isValidTimeout,\n  keepPreviousData,\n  matchMutation,\n  matchQuery,\n  noop,\n  partialMatchKey,\n  replaceData,\n  replaceEqualDeep,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  skipToken,\n  sleep,\n  timeUntilStale\n};\n//# sourceMappingURL=utils.js.map","// src/focusManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar FocusManager = class extends Subscribable {\n  #focused;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onFocus) => {\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus();\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return () => {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === \"boolean\") {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n  setFocused(focused) {\n    const changed = this.#focused !== focused;\n    if (changed) {\n      this.#focused = focused;\n      this.onFocus();\n    }\n  }\n  onFocus() {\n    const isFocused = this.isFocused();\n    this.listeners.forEach((listener) => {\n      listener(isFocused);\n    });\n  }\n  isFocused() {\n    if (typeof this.#focused === \"boolean\") {\n      return this.#focused;\n    }\n    return globalThis.document?.visibilityState !== \"hidden\";\n  }\n};\nvar focusManager = new FocusManager();\nexport {\n  FocusManager,\n  focusManager\n};\n//# sourceMappingURL=focusManager.js.map","// src/onlineManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar OnlineManager = class extends Subscribable {\n  #online = true;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onOnline) => {\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true);\n        const offlineListener = () => onOnline(false);\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return () => {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup(this.setOnline.bind(this));\n  }\n  setOnline(online) {\n    const changed = this.#online !== online;\n    if (changed) {\n      this.#online = online;\n      this.listeners.forEach((listener) => {\n        listener(online);\n      });\n    }\n  }\n  isOnline() {\n    return this.#online;\n  }\n};\nvar onlineManager = new OnlineManager();\nexport {\n  OnlineManager,\n  onlineManager\n};\n//# sourceMappingURL=onlineManager.js.map","// src/thenable.ts\nfunction pendingThenable() {\n  let resolve;\n  let reject;\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  thenable.status = \"pending\";\n  thenable.catch(() => {\n  });\n  function finalize(data) {\n    Object.assign(thenable, data);\n    delete thenable.resolve;\n    delete thenable.reject;\n  }\n  thenable.resolve = (value) => {\n    finalize({\n      status: \"fulfilled\",\n      value\n    });\n    resolve(value);\n  };\n  thenable.reject = (reason) => {\n    finalize({\n      status: \"rejected\",\n      reason\n    });\n    reject(reason);\n  };\n  return thenable;\n}\nexport {\n  pendingThenable\n};\n//# sourceMappingURL=thenable.js.map","// src/retryer.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport { isServer, sleep } from \"./utils.js\";\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n  constructor(options) {\n    super(\"CancelledError\");\n    this.revert = options?.revert;\n    this.silent = options?.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let isResolved = false;\n  let continueFn;\n  const thenable = pendingThenable();\n  const cancel = (cancelOptions) => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions));\n      config.abort?.();\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const canContinue = () => focusManager.isFocused() && (config.networkMode === \"always\" || onlineManager.isOnline()) && config.canRun();\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\n  const resolve = (value) => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onSuccess?.(value);\n      continueFn?.();\n      thenable.resolve(value);\n    }\n  };\n  const reject = (value) => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onError?.(value);\n      continueFn?.();\n      thenable.reject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved || canContinue()) {\n          continueResolve(value);\n        }\n      };\n      config.onPause?.();\n    }).then(() => {\n      continueFn = void 0;\n      if (!isResolved) {\n        config.onContinue?.();\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved) {\n      return;\n    }\n    let promiseOrValue;\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n    try {\n      promiseOrValue = initialPromise ?? config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {\n      if (isResolved) {\n        return;\n      }\n      const retry = config.retry ?? (isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      config.onFail?.(failureCount, error);\n      sleep(delay).then(() => {\n        return canContinue() ? void 0 : pause();\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  return {\n    promise: thenable,\n    cancel,\n    continue: () => {\n      continueFn?.();\n      return thenable;\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      if (canStart()) {\n        run();\n      } else {\n        pause().then(run);\n      }\n      return thenable;\n    }\n  };\n}\nexport {\n  CancelledError,\n  canFetch,\n  createRetryer,\n  isCancelledError\n};\n//# sourceMappingURL=retryer.js.map","// src/notifyManager.ts\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n  let notifyFn = (callback) => {\n    callback();\n  };\n  let batchNotifyFn = (callback) => {\n    callback();\n  };\n  let scheduleFn = (cb) => setTimeout(cb, 0);\n  const schedule = (callback) => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  return {\n    batch: (callback) => {\n      let result;\n      transactions++;\n      try {\n        result = callback();\n      } finally {\n        transactions--;\n        if (!transactions) {\n          flush();\n        }\n      }\n      return result;\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: (callback) => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args);\n        });\n      };\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: (fn) => {\n      notifyFn = fn;\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: (fn) => {\n      batchNotifyFn = fn;\n    },\n    setScheduler: (fn) => {\n      scheduleFn = fn;\n    }\n  };\n}\nvar notifyManager = createNotifyManager();\nexport {\n  createNotifyManager,\n  notifyManager\n};\n//# sourceMappingURL=notifyManager.js.map","// src/removable.ts\nimport { isServer, isValidTimeout } from \"./utils.js\";\nvar Removable = class {\n  #gcTimeout;\n  destroy() {\n    this.clearGcTimeout();\n  }\n  scheduleGc() {\n    this.clearGcTimeout();\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = setTimeout(() => {\n        this.optionalRemove();\n      }, this.gcTime);\n    }\n  }\n  updateGcTime(newGcTime) {\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1e3)\n    );\n  }\n  clearGcTimeout() {\n    if (this.#gcTimeout) {\n      clearTimeout(this.#gcTimeout);\n      this.#gcTimeout = void 0;\n    }\n  }\n};\nexport {\n  Removable\n};\n//# sourceMappingURL=removable.js.map","// src/query.ts\nimport {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  skipToken,\n  timeUntilStale\n} from \"./utils.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { canFetch, createRetryer, isCancelledError } from \"./retryer.js\";\nimport { Removable } from \"./removable.js\";\nvar Query = class extends Removable {\n  #initialState;\n  #revertState;\n  #cache;\n  #retryer;\n  #defaultOptions;\n  #abortSignalConsumed;\n  constructor(config) {\n    super();\n    this.#abortSignalConsumed = false;\n    this.#defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.#cache = config.cache;\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.#initialState = getDefaultState(this.options);\n    this.state = config.state ?? this.#initialState;\n    this.scheduleGc();\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  get promise() {\n    return this.#retryer?.promise;\n  }\n  setOptions(options) {\n    this.options = { ...this.#defaultOptions, ...options };\n    this.updateGcTime(this.options.gcTime);\n  }\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === \"idle\") {\n      this.#cache.remove(this);\n    }\n  }\n  setData(newData, options) {\n    const data = replaceData(this.state.data, newData, this.options);\n    this.#dispatch({\n      data,\n      type: \"success\",\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual\n    });\n    return data;\n  }\n  setState(state, setStateOptions) {\n    this.#dispatch({ type: \"setState\", state, setStateOptions });\n  }\n  cancel(options) {\n    const promise = this.#retryer?.promise;\n    this.#retryer?.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  }\n  destroy() {\n    super.destroy();\n    this.cancel({ silent: true });\n  }\n  reset() {\n    this.destroy();\n    this.setState(this.#initialState);\n  }\n  isActive() {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false\n    );\n  }\n  isDisabled() {\n    if (this.getObserversCount() > 0) {\n      return !this.isActive();\n    }\n    return this.options.queryFn === skipToken || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;\n  }\n  isStale() {\n    if (this.state.isInvalidated) {\n      return true;\n    }\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale\n      );\n    }\n    return this.state.data === void 0;\n  }\n  isStaleByTime(staleTime = 0) {\n    return this.state.isInvalidated || this.state.data === void 0 || !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n  onFocus() {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  onOnline() {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer);\n      this.clearGcTimeout();\n      this.#cache.notify({ type: \"observerAdded\", query: this, observer });\n    }\n  }\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer);\n      if (!this.observers.length) {\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true });\n          } else {\n            this.#retryer.cancelRetry();\n          }\n        }\n        this.scheduleGc();\n      }\n      this.#cache.notify({ type: \"observerRemoved\", query: this, observer });\n    }\n  }\n  getObserversCount() {\n    return this.observers.length;\n  }\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: \"invalidate\" });\n    }\n  }\n  fetch(options, fetchOptions) {\n    if (this.state.fetchStatus !== \"idle\") {\n      if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {\n        this.cancel({ silent: true });\n      } else if (this.#retryer) {\n        this.#retryer.continueRetry();\n        return this.#retryer.promise;\n      }\n    }\n    if (options) {\n      this.setOptions(options);\n    }\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn);\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`\n        );\n      }\n    }\n    const abortController = new AbortController();\n    const addSignalProperty = (object) => {\n      Object.defineProperty(object, \"signal\", {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true;\n          return abortController.signal;\n        }\n      });\n    };\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions);\n      const queryFnContext = {\n        queryKey: this.queryKey,\n        meta: this.meta\n      };\n      addSignalProperty(queryFnContext);\n      this.#abortSignalConsumed = false;\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn,\n          queryFnContext,\n          this\n        );\n      }\n      return queryFn(queryFnContext);\n    };\n    const context = {\n      fetchOptions,\n      options: this.options,\n      queryKey: this.queryKey,\n      state: this.state,\n      fetchFn\n    };\n    addSignalProperty(context);\n    this.options.behavior?.onFetch(\n      context,\n      this\n    );\n    this.#revertState = this.state;\n    if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n      this.#dispatch({ type: \"fetch\", meta: context.fetchOptions?.meta });\n    }\n    const onError = (error) => {\n      if (!(isCancelledError(error) && error.silent)) {\n        this.#dispatch({\n          type: \"error\",\n          error\n        });\n      }\n      if (!isCancelledError(error)) {\n        this.#cache.config.onError?.(\n          error,\n          this\n        );\n        this.#cache.config.onSettled?.(\n          this.state.data,\n          error,\n          this\n        );\n      }\n      this.scheduleGc();\n    };\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise,\n      fn: context.fetchFn,\n      abort: abortController.abort.bind(abortController),\n      onSuccess: (data) => {\n        if (data === void 0) {\n          if (process.env.NODE_ENV !== \"production\") {\n            console.error(\n              `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`\n            );\n          }\n          onError(new Error(`${this.queryHash} data is undefined`));\n          return;\n        }\n        try {\n          this.setData(data);\n        } catch (error) {\n          onError(error);\n          return;\n        }\n        this.#cache.config.onSuccess?.(data, this);\n        this.#cache.config.onSettled?.(\n          data,\n          this.state.error,\n          this\n        );\n        this.scheduleGc();\n      },\n      onError,\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true\n    });\n    return this.#retryer.start();\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            fetchStatus: \"paused\"\n          };\n        case \"continue\":\n          return {\n            ...state,\n            fetchStatus: \"fetching\"\n          };\n        case \"fetch\":\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: \"success\",\n            ...!action.manual && {\n              fetchStatus: \"idle\",\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            }\n          };\n        case \"error\":\n          const error = action.error;\n          if (isCancelledError(error) && error.revert && this.#revertState) {\n            return { ...this.#revertState, fetchStatus: \"idle\" };\n          }\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: \"idle\",\n            status: \"error\"\n          };\n        case \"invalidate\":\n          return {\n            ...state,\n            isInvalidated: true\n          };\n        case \"setState\":\n          return {\n            ...state,\n            ...action.state\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate();\n      });\n      this.#cache.notify({ query: this, type: \"updated\", action });\n    });\n  }\n};\nfunction fetchState(data, options) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? \"fetching\" : \"paused\",\n    ...data === void 0 && {\n      error: null,\n      status: \"pending\"\n    }\n  };\n}\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\n  const hasData = data !== void 0;\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? \"success\" : \"pending\",\n    fetchStatus: \"idle\"\n  };\n}\nexport {\n  Query,\n  fetchState\n};\n//# sourceMappingURL=query.js.map","// src/queryCache.ts\nimport { hashQueryKeyByOptions, matchQuery } from \"./utils.js\";\nimport { Query } from \"./query.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar QueryCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#queries = /* @__PURE__ */ new Map();\n  }\n  #queries;\n  build(client, options, state) {\n    const queryKey = options.queryKey;\n    const queryHash = options.queryHash ?? hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n    if (!query) {\n      query = new Query({\n        cache: this,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n    return query;\n  }\n  add(query) {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query);\n      this.notify({\n        type: \"added\",\n        query\n      });\n    }\n  }\n  remove(query) {\n    const queryInMap = this.#queries.get(query.queryHash);\n    if (queryInMap) {\n      query.destroy();\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash);\n      }\n      this.notify({ type: \"removed\", query });\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query);\n      });\n    });\n  }\n  get(queryHash) {\n    return this.#queries.get(queryHash);\n  }\n  getAll() {\n    return [...this.#queries.values()];\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (query) => matchQuery(defaultedFilters, query)\n    );\n  }\n  findAll(filters = {}) {\n    const queries = this.getAll();\n    return Object.keys(filters).length > 0 ? queries.filter((query) => matchQuery(filters, query)) : queries;\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  onFocus() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus();\n      });\n    });\n  }\n  onOnline() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline();\n      });\n    });\n  }\n};\nexport {\n  QueryCache\n};\n//# sourceMappingURL=queryCache.js.map","// src/mutation.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Removable } from \"./removable.js\";\nimport { createRetryer } from \"./retryer.js\";\nvar Mutation = class extends Removable {\n  #observers;\n  #mutationCache;\n  #retryer;\n  constructor(config) {\n    super();\n    this.mutationId = config.mutationId;\n    this.#mutationCache = config.mutationCache;\n    this.#observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n  setOptions(options) {\n    this.options = options;\n    this.updateGcTime(this.options.gcTime);\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  addObserver(observer) {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer);\n      this.clearGcTimeout();\n      this.#mutationCache.notify({\n        type: \"observerAdded\",\n        mutation: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    this.#observers = this.#observers.filter((x) => x !== observer);\n    this.scheduleGc();\n    this.#mutationCache.notify({\n      type: \"observerRemoved\",\n      mutation: this,\n      observer\n    });\n  }\n  optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === \"pending\") {\n        this.scheduleGc();\n      } else {\n        this.#mutationCache.remove(this);\n      }\n    }\n  }\n  continue() {\n    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n    this.execute(this.state.variables);\n  }\n  async execute(variables) {\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error(\"No mutationFn found\"));\n        }\n        return this.options.mutationFn(variables);\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this)\n    });\n    const restored = this.state.status === \"pending\";\n    const isPaused = !this.#retryer.canStart();\n    try {\n      if (!restored) {\n        this.#dispatch({ type: \"pending\", variables, isPaused });\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this\n        );\n        const context = await this.options.onMutate?.(variables);\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: \"pending\",\n            context,\n            variables,\n            isPaused\n          });\n        }\n      }\n      const data = await this.#retryer.start();\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSuccess?.(data, variables, this.state.context);\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSettled?.(data, null, variables, this.state.context);\n      this.#dispatch({ type: \"success\", data });\n      return data;\n    } catch (error) {\n      try {\n        await this.#mutationCache.config.onError?.(\n          error,\n          variables,\n          this.state.context,\n          this\n        );\n        await this.options.onError?.(\n          error,\n          variables,\n          this.state.context\n        );\n        await this.#mutationCache.config.onSettled?.(\n          void 0,\n          error,\n          this.state.variables,\n          this.state.context,\n          this\n        );\n        await this.options.onSettled?.(\n          void 0,\n          error,\n          variables,\n          this.state.context\n        );\n        throw error;\n      } finally {\n        this.#dispatch({ type: \"error\", error });\n      }\n    } finally {\n      this.#mutationCache.runNext(this);\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            isPaused: true\n          };\n        case \"continue\":\n          return {\n            ...state,\n            isPaused: false\n          };\n        case \"pending\":\n          return {\n            ...state,\n            context: action.context,\n            data: void 0,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: \"pending\",\n            variables: action.variables,\n            submittedAt: Date.now()\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: \"success\",\n            isPaused: false\n          };\n        case \"error\":\n          return {\n            ...state,\n            data: void 0,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: \"error\"\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action);\n      });\n      this.#mutationCache.notify({\n        mutation: this,\n        type: \"updated\",\n        action\n      });\n    });\n  }\n};\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\nexport {\n  Mutation,\n  getDefaultState\n};\n//# sourceMappingURL=mutation.js.map","// src/mutationCache.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Mutation } from \"./mutation.js\";\nimport { matchMutation, noop } from \"./utils.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar MutationCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#mutations = /* @__PURE__ */ new Map();\n    this.#mutationId = Date.now();\n  }\n  #mutations;\n  #mutationId;\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    const scope = scopeFor(mutation);\n    const mutations = this.#mutations.get(scope) ?? [];\n    mutations.push(mutation);\n    this.#mutations.set(scope, mutations);\n    this.notify({ type: \"added\", mutation });\n  }\n  remove(mutation) {\n    const scope = scopeFor(mutation);\n    if (this.#mutations.has(scope)) {\n      const mutations = this.#mutations.get(scope)?.filter((x) => x !== mutation);\n      if (mutations) {\n        if (mutations.length === 0) {\n          this.#mutations.delete(scope);\n        } else {\n          this.#mutations.set(scope, mutations);\n        }\n      }\n    }\n    this.notify({ type: \"removed\", mutation });\n  }\n  canRun(mutation) {\n    const firstPendingMutation = this.#mutations.get(scopeFor(mutation))?.find((m) => m.state.status === \"pending\");\n    return !firstPendingMutation || firstPendingMutation === mutation;\n  }\n  runNext(mutation) {\n    const foundMutation = this.#mutations.get(scopeFor(mutation))?.find((m) => m !== mutation && m.state.isPaused);\n    return foundMutation?.continue() ?? Promise.resolve();\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((mutation) => {\n        this.remove(mutation);\n      });\n    });\n  }\n  getAll() {\n    return [...this.#mutations.values()].flat();\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (mutation) => matchMutation(defaultedFilters, mutation)\n    );\n  }\n  findAll(filters = {}) {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation));\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused);\n    return notifyManager.batch(\n      () => Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop))\n      )\n    );\n  }\n};\nfunction scopeFor(mutation) {\n  return mutation.options.scope?.id ?? String(mutation.mutationId);\n}\nexport {\n  MutationCache\n};\n//# sourceMappingURL=mutationCache.js.map","// src/infiniteQueryBehavior.ts\nimport { addToEnd, addToStart, ensureQueryFn } from \"./utils.js\";\nfunction infiniteQueryBehavior(pages) {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options;\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n      const oldPages = context.state.data?.pages || [];\n      const oldPageParams = context.state.data?.pageParams || [];\n      let result = { pages: [], pageParams: [] };\n      let currentPage = 0;\n      const fetchFn = async () => {\n        let cancelled = false;\n        const addSignalProperty = (object) => {\n          Object.defineProperty(object, \"signal\", {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true;\n              } else {\n                context.signal.addEventListener(\"abort\", () => {\n                  cancelled = true;\n                });\n              }\n              return context.signal;\n            }\n          });\n        };\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions);\n        const fetchPage = async (data, param, previous) => {\n          if (cancelled) {\n            return Promise.reject();\n          }\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data);\n          }\n          const queryFnContext = {\n            queryKey: context.queryKey,\n            pageParam: param,\n            direction: previous ? \"backward\" : \"forward\",\n            meta: context.options.meta\n          };\n          addSignalProperty(queryFnContext);\n          const page = await queryFn(\n            queryFnContext\n          );\n          const { maxPages } = context.options;\n          const addTo = previous ? addToStart : addToEnd;\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages)\n          };\n        };\n        if (direction && oldPages.length) {\n          const previous = direction === \"backward\";\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams\n          };\n          const param = pageParamFn(options, oldData);\n          result = await fetchPage(oldData, param, previous);\n        } else {\n          const remainingPages = pages ?? oldPages.length;\n          do {\n            const param = currentPage === 0 ? oldPageParams[0] ?? options.initialPageParam : getNextPageParam(options, result);\n            if (currentPage > 0 && param == null) {\n              break;\n            }\n            result = await fetchPage(result, param);\n            currentPage++;\n          } while (currentPage < remainingPages);\n        }\n        return result;\n      };\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn,\n            {\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal\n            },\n            query\n          );\n        };\n      } else {\n        context.fetchFn = fetchFn;\n      }\n    }\n  };\n}\nfunction getNextPageParam(options, { pages, pageParams }) {\n  const lastIndex = pages.length - 1;\n  return pages.length > 0 ? options.getNextPageParam(\n    pages[lastIndex],\n    pages,\n    pageParams[lastIndex],\n    pageParams\n  ) : void 0;\n}\nfunction getPreviousPageParam(options, { pages, pageParams }) {\n  return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;\n}\nfunction hasNextPage(options, data) {\n  if (!data)\n    return false;\n  return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n  if (!data || !options.getPreviousPageParam)\n    return false;\n  return getPreviousPageParam(options, data) != null;\n}\nexport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n};\n//# sourceMappingURL=infiniteQueryBehavior.js.map","// src/queryClient.ts\nimport {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  resolveStaleTime,\n  skipToken\n} from \"./utils.js\";\nimport { QueryCache } from \"./queryCache.js\";\nimport { MutationCache } from \"./mutationCache.js\";\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { infiniteQueryBehavior } from \"./infiniteQueryBehavior.js\";\nvar QueryClient = class {\n  #queryCache;\n  #mutationCache;\n  #defaultOptions;\n  #queryDefaults;\n  #mutationDefaults;\n  #mountCount;\n  #unsubscribeFocus;\n  #unsubscribeOnline;\n  constructor(config = {}) {\n    this.#queryCache = config.queryCache || new QueryCache();\n    this.#mutationCache = config.mutationCache || new MutationCache();\n    this.#defaultOptions = config.defaultOptions || {};\n    this.#queryDefaults = /* @__PURE__ */ new Map();\n    this.#mutationDefaults = /* @__PURE__ */ new Map();\n    this.#mountCount = 0;\n  }\n  mount() {\n    this.#mountCount++;\n    if (this.#mountCount !== 1)\n      return;\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations();\n        this.#queryCache.onFocus();\n      }\n    });\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations();\n        this.#queryCache.onOnline();\n      }\n    });\n  }\n  unmount() {\n    this.#mountCount--;\n    if (this.#mountCount !== 0)\n      return;\n    this.#unsubscribeFocus?.();\n    this.#unsubscribeFocus = void 0;\n    this.#unsubscribeOnline?.();\n    this.#unsubscribeOnline = void 0;\n  }\n  isFetching(filters) {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: \"fetching\" }).length;\n  }\n  isMutating(filters) {\n    return this.#mutationCache.findAll({ ...filters, status: \"pending\" }).length;\n  }\n  getQueryData(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state.data;\n  }\n  ensureQueryData(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    const query = this.#queryCache.build(this, defaultedOptions);\n    const cachedData = query.state.data;\n    if (cachedData === void 0) {\n      return this.fetchQuery(options);\n    }\n    if (options.revalidateIfStale && query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))) {\n      void this.prefetchQuery(defaultedOptions);\n    }\n    return Promise.resolve(cachedData);\n  }\n  getQueriesData(filters) {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n  setQueryData(queryKey, updater, options) {\n    const defaultedOptions = this.defaultQueryOptions({ queryKey });\n    const query = this.#queryCache.get(\n      defaultedOptions.queryHash\n    );\n    const prevData = query?.state.data;\n    const data = functionalUpdate(updater, prevData);\n    if (data === void 0) {\n      return void 0;\n    }\n    return this.#queryCache.build(this, defaultedOptions).setData(data, { ...options, manual: true });\n  }\n  setQueriesData(filters, updater, options) {\n    return notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map(({ queryKey }) => [\n        queryKey,\n        this.setQueryData(queryKey, updater, options)\n      ])\n    );\n  }\n  getQueryState(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(\n      options.queryHash\n    )?.state;\n  }\n  removeQueries(filters) {\n    const queryCache = this.#queryCache;\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query);\n      });\n    });\n  }\n  resetQueries(filters, options) {\n    const queryCache = this.#queryCache;\n    const refetchFilters = {\n      type: \"active\",\n      ...filters\n    };\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset();\n      });\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n  cancelQueries(filters, cancelOptions = {}) {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map((query) => query.cancel(defaultedCancelOptions))\n    );\n    return Promise.all(promises).then(noop).catch(noop);\n  }\n  invalidateQueries(filters, options = {}) {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate();\n      });\n      if (filters?.refetchType === \"none\") {\n        return Promise.resolve();\n      }\n      const refetchFilters = {\n        ...filters,\n        type: filters?.refetchType ?? filters?.type ?? \"active\"\n      };\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n  refetchQueries(filters, options = {}) {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options.cancelRefetch ?? true\n    };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).filter((query) => !query.isDisabled()).map((query) => {\n        let promise = query.fetch(void 0, fetchOptions);\n        if (!fetchOptions.throwOnError) {\n          promise = promise.catch(noop);\n        }\n        return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\n      })\n    );\n    return Promise.all(promises).then(noop);\n  }\n  fetchQuery(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    if (defaultedOptions.retry === void 0) {\n      defaultedOptions.retry = false;\n    }\n    const query = this.#queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(\n      resolveStaleTime(defaultedOptions.staleTime, query)\n    ) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n  prefetchQuery(options) {\n    return this.fetchQuery(options).then(noop).catch(noop);\n  }\n  fetchInfiniteQuery(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.fetchQuery(options);\n  }\n  prefetchInfiniteQuery(options) {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop);\n  }\n  ensureInfiniteQueryData(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.ensureQueryData(options);\n  }\n  resumePausedMutations() {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations();\n    }\n    return Promise.resolve();\n  }\n  getQueryCache() {\n    return this.#queryCache;\n  }\n  getMutationCache() {\n    return this.#mutationCache;\n  }\n  getDefaultOptions() {\n    return this.#defaultOptions;\n  }\n  setDefaultOptions(options) {\n    this.#defaultOptions = options;\n  }\n  setQueryDefaults(queryKey, options) {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options\n    });\n  }\n  getQueryDefaults(queryKey) {\n    const defaults = [...this.#queryDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  setMutationDefaults(mutationKey, options) {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options\n    });\n  }\n  getMutationDefaults(mutationKey) {\n    const defaults = [...this.#mutationDefaults.values()];\n    let result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        result = { ...result, ...queryDefault.defaultOptions };\n      }\n    });\n    return result;\n  }\n  defaultQueryOptions(options) {\n    if (options._defaulted) {\n      return options;\n    }\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions\n      );\n    }\n    if (defaultedOptions.refetchOnReconnect === void 0) {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\n    }\n    if (defaultedOptions.throwOnError === void 0) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n    }\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = \"offlineFirst\";\n    }\n    if (defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false;\n    }\n    return defaultedOptions;\n  }\n  defaultMutationOptions(options) {\n    if (options?._defaulted) {\n      return options;\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n  clear() {\n    this.#queryCache.clear();\n    this.#mutationCache.clear();\n  }\n};\nexport {\n  QueryClient\n};\n//# sourceMappingURL=queryClient.js.map","// src/queryObserver.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { fetchState } from \"./query.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport {\n  isServer,\n  isValidTimeout,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  timeUntilStale\n} from \"./utils.js\";\nvar QueryObserver = class extends Subscribable {\n  constructor(client, options) {\n    super();\n    this.options = options;\n    this.#client = client;\n    this.#selectError = null;\n    this.#currentThenable = pendingThenable();\n    if (!this.options.experimental_prefetchInRender) {\n      this.#currentThenable.reject(\n        new Error(\"experimental_prefetchInRender feature flag is not enabled\")\n      );\n    }\n    this.bindMethods();\n    this.setOptions(options);\n  }\n  #client;\n  #currentQuery = void 0;\n  #currentQueryInitialState = void 0;\n  #currentResult = void 0;\n  #currentResultState;\n  #currentResultOptions;\n  #currentThenable;\n  #selectError;\n  #selectFn;\n  #selectResult;\n  // This property keeps track of the last query with defined data.\n  // It will be used to pass the previous data and query to the placeholder function between renders.\n  #lastQueryWithDefinedData;\n  #staleTimeoutId;\n  #refetchIntervalId;\n  #currentRefetchInterval;\n  #trackedProps = /* @__PURE__ */ new Set();\n  bindMethods() {\n    this.refetch = this.refetch.bind(this);\n  }\n  onSubscribe() {\n    if (this.listeners.size === 1) {\n      this.#currentQuery.addObserver(this);\n      if (shouldFetchOnMount(this.#currentQuery, this.options)) {\n        this.#executeFetch();\n      } else {\n        this.updateResult();\n      }\n      this.#updateTimers();\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.destroy();\n    }\n  }\n  shouldFetchOnReconnect() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnReconnect\n    );\n  }\n  shouldFetchOnWindowFocus() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnWindowFocus\n    );\n  }\n  destroy() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.#clearStaleTimeout();\n    this.#clearRefetchInterval();\n    this.#currentQuery.removeObserver(this);\n  }\n  setOptions(options, notifyOptions) {\n    const prevOptions = this.options;\n    const prevQuery = this.#currentQuery;\n    this.options = this.#client.defaultQueryOptions(options);\n    if (this.options.enabled !== void 0 && typeof this.options.enabled !== \"boolean\" && typeof this.options.enabled !== \"function\" && typeof resolveEnabled(this.options.enabled, this.#currentQuery) !== \"boolean\") {\n      throw new Error(\n        \"Expected enabled to be a boolean or a callback that returns a boolean\"\n      );\n    }\n    this.#updateQuery();\n    this.#currentQuery.setOptions(this.options);\n    if (prevOptions._defaulted && !shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getQueryCache().notify({\n        type: \"observerOptionsUpdated\",\n        query: this.#currentQuery,\n        observer: this\n      });\n    }\n    const mounted = this.hasListeners();\n    if (mounted && shouldFetchOptionally(\n      this.#currentQuery,\n      prevQuery,\n      this.options,\n      prevOptions\n    )) {\n      this.#executeFetch();\n    }\n    this.updateResult(notifyOptions);\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || resolveStaleTime(this.options.staleTime, this.#currentQuery) !== resolveStaleTime(prevOptions.staleTime, this.#currentQuery))) {\n      this.#updateStaleTimeout();\n    }\n    const nextRefetchInterval = this.#computeRefetchInterval();\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || nextRefetchInterval !== this.#currentRefetchInterval)) {\n      this.#updateRefetchInterval(nextRefetchInterval);\n    }\n  }\n  getOptimisticResult(options) {\n    const query = this.#client.getQueryCache().build(this.#client, options);\n    const result = this.createResult(query, options);\n    if (shouldAssignObserverCurrentProperties(this, result)) {\n      this.#currentResult = result;\n      this.#currentResultOptions = this.options;\n      this.#currentResultState = this.#currentQuery.state;\n    }\n    return result;\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  trackResult(result, onPropTracked) {\n    const trackedResult = {};\n    Object.keys(result).forEach((key) => {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n          this.trackProp(key);\n          onPropTracked?.(key);\n          return result[key];\n        }\n      });\n    });\n    return trackedResult;\n  }\n  trackProp(key) {\n    this.#trackedProps.add(key);\n  }\n  getCurrentQuery() {\n    return this.#currentQuery;\n  }\n  refetch({ ...options } = {}) {\n    return this.fetch({\n      ...options\n    });\n  }\n  fetchOptimistic(options) {\n    const defaultedOptions = this.#client.defaultQueryOptions(options);\n    const query = this.#client.getQueryCache().build(this.#client, defaultedOptions);\n    return query.fetch().then(() => this.createResult(query, defaultedOptions));\n  }\n  fetch(fetchOptions) {\n    return this.#executeFetch({\n      ...fetchOptions,\n      cancelRefetch: fetchOptions.cancelRefetch ?? true\n    }).then(() => {\n      this.updateResult();\n      return this.#currentResult;\n    });\n  }\n  #executeFetch(fetchOptions) {\n    this.#updateQuery();\n    let promise = this.#currentQuery.fetch(\n      this.options,\n      fetchOptions\n    );\n    if (!fetchOptions?.throwOnError) {\n      promise = promise.catch(noop);\n    }\n    return promise;\n  }\n  #updateStaleTimeout() {\n    this.#clearStaleTimeout();\n    const staleTime = resolveStaleTime(\n      this.options.staleTime,\n      this.#currentQuery\n    );\n    if (isServer || this.#currentResult.isStale || !isValidTimeout(staleTime)) {\n      return;\n    }\n    const time = timeUntilStale(this.#currentResult.dataUpdatedAt, staleTime);\n    const timeout = time + 1;\n    this.#staleTimeoutId = setTimeout(() => {\n      if (!this.#currentResult.isStale) {\n        this.updateResult();\n      }\n    }, timeout);\n  }\n  #computeRefetchInterval() {\n    return (typeof this.options.refetchInterval === \"function\" ? this.options.refetchInterval(this.#currentQuery) : this.options.refetchInterval) ?? false;\n  }\n  #updateRefetchInterval(nextInterval) {\n    this.#clearRefetchInterval();\n    this.#currentRefetchInterval = nextInterval;\n    if (isServer || resolveEnabled(this.options.enabled, this.#currentQuery) === false || !isValidTimeout(this.#currentRefetchInterval) || this.#currentRefetchInterval === 0) {\n      return;\n    }\n    this.#refetchIntervalId = setInterval(() => {\n      if (this.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        this.#executeFetch();\n      }\n    }, this.#currentRefetchInterval);\n  }\n  #updateTimers() {\n    this.#updateStaleTimeout();\n    this.#updateRefetchInterval(this.#computeRefetchInterval());\n  }\n  #clearStaleTimeout() {\n    if (this.#staleTimeoutId) {\n      clearTimeout(this.#staleTimeoutId);\n      this.#staleTimeoutId = void 0;\n    }\n  }\n  #clearRefetchInterval() {\n    if (this.#refetchIntervalId) {\n      clearInterval(this.#refetchIntervalId);\n      this.#refetchIntervalId = void 0;\n    }\n  }\n  createResult(query, options) {\n    const prevQuery = this.#currentQuery;\n    const prevOptions = this.options;\n    const prevResult = this.#currentResult;\n    const prevResultState = this.#currentResultState;\n    const prevResultOptions = this.#currentResultOptions;\n    const queryChange = query !== prevQuery;\n    const queryInitialState = queryChange ? query.state : this.#currentQueryInitialState;\n    const { state } = query;\n    let newState = { ...state };\n    let isPlaceholderData = false;\n    let data;\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners();\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n      if (fetchOnMount || fetchOptionally) {\n        newState = {\n          ...newState,\n          ...fetchState(state.data, query.options)\n        };\n      }\n      if (options._optimisticResults === \"isRestoring\") {\n        newState.fetchStatus = \"idle\";\n      }\n    }\n    let { error, errorUpdatedAt, status } = newState;\n    if (options.select && newState.data !== void 0) {\n      if (prevResult && newState.data === prevResultState?.data && options.select === this.#selectFn) {\n        data = this.#selectResult;\n      } else {\n        try {\n          this.#selectFn = options.select;\n          data = options.select(newState.data);\n          data = replaceData(prevResult?.data, data, options);\n          this.#selectResult = data;\n          this.#selectError = null;\n        } catch (selectError) {\n          this.#selectError = selectError;\n        }\n      }\n    } else {\n      data = newState.data;\n    }\n    if (options.placeholderData !== void 0 && data === void 0 && status === \"pending\") {\n      let placeholderData;\n      if (prevResult?.isPlaceholderData && options.placeholderData === prevResultOptions?.placeholderData) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === \"function\" ? options.placeholderData(\n          this.#lastQueryWithDefinedData?.state.data,\n          this.#lastQueryWithDefinedData\n        ) : options.placeholderData;\n        if (options.select && placeholderData !== void 0) {\n          try {\n            placeholderData = options.select(placeholderData);\n            this.#selectError = null;\n          } catch (selectError) {\n            this.#selectError = selectError;\n          }\n        }\n      }\n      if (placeholderData !== void 0) {\n        status = \"success\";\n        data = replaceData(\n          prevResult?.data,\n          placeholderData,\n          options\n        );\n        isPlaceholderData = true;\n      }\n    }\n    if (this.#selectError) {\n      error = this.#selectError;\n      data = this.#selectResult;\n      errorUpdatedAt = Date.now();\n      status = \"error\";\n    }\n    const isFetching = newState.fetchStatus === \"fetching\";\n    const isPending = status === \"pending\";\n    const isError = status === \"error\";\n    const isLoading = isPending && isFetching;\n    const hasData = data !== void 0;\n    const result = {\n      status,\n      fetchStatus: newState.fetchStatus,\n      isPending,\n      isSuccess: status === \"success\",\n      isError,\n      isInitialLoading: isLoading,\n      isLoading,\n      data,\n      dataUpdatedAt: newState.dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: newState.fetchFailureCount,\n      failureReason: newState.fetchFailureReason,\n      errorUpdateCount: newState.errorUpdateCount,\n      isFetched: newState.dataUpdateCount > 0 || newState.errorUpdateCount > 0,\n      isFetchedAfterMount: newState.dataUpdateCount > queryInitialState.dataUpdateCount || newState.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isPending,\n      isLoadingError: isError && !hasData,\n      isPaused: newState.fetchStatus === \"paused\",\n      isPlaceholderData,\n      isRefetchError: isError && hasData,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      promise: this.#currentThenable\n    };\n    const nextResult = result;\n    if (this.options.experimental_prefetchInRender) {\n      const finalizeThenableIfPossible = (thenable) => {\n        if (nextResult.status === \"error\") {\n          thenable.reject(nextResult.error);\n        } else if (nextResult.data !== void 0) {\n          thenable.resolve(nextResult.data);\n        }\n      };\n      const recreateThenable = () => {\n        const pending = this.#currentThenable = nextResult.promise = pendingThenable();\n        finalizeThenableIfPossible(pending);\n      };\n      const prevThenable = this.#currentThenable;\n      switch (prevThenable.status) {\n        case \"pending\":\n          if (query.queryHash === prevQuery.queryHash) {\n            finalizeThenableIfPossible(prevThenable);\n          }\n          break;\n        case \"fulfilled\":\n          if (nextResult.status === \"error\" || nextResult.data !== prevThenable.value) {\n            recreateThenable();\n          }\n          break;\n        case \"rejected\":\n          if (nextResult.status !== \"error\" || nextResult.error !== prevThenable.reason) {\n            recreateThenable();\n          }\n          break;\n      }\n    }\n    return nextResult;\n  }\n  updateResult(notifyOptions) {\n    const prevResult = this.#currentResult;\n    const nextResult = this.createResult(this.#currentQuery, this.options);\n    this.#currentResultState = this.#currentQuery.state;\n    this.#currentResultOptions = this.options;\n    if (this.#currentResultState.data !== void 0) {\n      this.#lastQueryWithDefinedData = this.#currentQuery;\n    }\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return;\n    }\n    this.#currentResult = nextResult;\n    const defaultNotifyOptions = {};\n    const shouldNotifyListeners = () => {\n      if (!prevResult) {\n        return true;\n      }\n      const { notifyOnChangeProps } = this.options;\n      const notifyOnChangePropsValue = typeof notifyOnChangeProps === \"function\" ? notifyOnChangeProps() : notifyOnChangeProps;\n      if (notifyOnChangePropsValue === \"all\" || !notifyOnChangePropsValue && !this.#trackedProps.size) {\n        return true;\n      }\n      const includedProps = new Set(\n        notifyOnChangePropsValue ?? this.#trackedProps\n      );\n      if (this.options.throwOnError) {\n        includedProps.add(\"error\");\n      }\n      return Object.keys(this.#currentResult).some((key) => {\n        const typedKey = key;\n        const changed = this.#currentResult[typedKey] !== prevResult[typedKey];\n        return changed && includedProps.has(typedKey);\n      });\n    };\n    if (notifyOptions?.listeners !== false && shouldNotifyListeners()) {\n      defaultNotifyOptions.listeners = true;\n    }\n    this.#notify({ ...defaultNotifyOptions, ...notifyOptions });\n  }\n  #updateQuery() {\n    const query = this.#client.getQueryCache().build(this.#client, this.options);\n    if (query === this.#currentQuery) {\n      return;\n    }\n    const prevQuery = this.#currentQuery;\n    this.#currentQuery = query;\n    this.#currentQueryInitialState = query.state;\n    if (this.hasListeners()) {\n      prevQuery?.removeObserver(this);\n      query.addObserver(this);\n    }\n  }\n  onQueryUpdate() {\n    this.updateResult();\n    if (this.hasListeners()) {\n      this.#updateTimers();\n    }\n  }\n  #notify(notifyOptions) {\n    notifyManager.batch(() => {\n      if (notifyOptions.listeners) {\n        this.listeners.forEach((listener) => {\n          listener(this.#currentResult);\n        });\n      }\n      this.#client.getQueryCache().notify({\n        query: this.#currentQuery,\n        type: \"observerResultsUpdated\"\n      });\n    });\n  }\n};\nfunction shouldLoadOnMount(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.state.data === void 0 && !(query.state.status === \"error\" && options.retryOnMount === false);\n}\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.data !== void 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\nfunction shouldFetchOn(query, options, field) {\n  if (resolveEnabled(options.enabled, query) !== false) {\n    const value = typeof field === \"function\" ? field(query) : field;\n    return value === \"always\" || value !== false && isStale(query, options);\n  }\n  return false;\n}\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return (query !== prevQuery || resolveEnabled(prevOptions.enabled, query) === false) && (!options.suspense || query.state.status !== \"error\") && isStale(query, options);\n}\nfunction isStale(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.isStaleByTime(resolveStaleTime(options.staleTime, query));\n}\nfunction shouldAssignObserverCurrentProperties(observer, optimisticResult) {\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true;\n  }\n  return false;\n}\nexport {\n  QueryObserver\n};\n//# sourceMappingURL=queryObserver.js.map","// src/infiniteQueryObserver.ts\nimport { QueryObserver } from \"./queryObserver.js\";\nimport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n} from \"./infiniteQueryBehavior.js\";\nvar InfiniteQueryObserver = class extends QueryObserver {\n  constructor(client, options) {\n    super(client, options);\n  }\n  bindMethods() {\n    super.bindMethods();\n    this.fetchNextPage = this.fetchNextPage.bind(this);\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n  }\n  setOptions(options, notifyOptions) {\n    super.setOptions(\n      {\n        ...options,\n        behavior: infiniteQueryBehavior()\n      },\n      notifyOptions\n    );\n  }\n  getOptimisticResult(options) {\n    options.behavior = infiniteQueryBehavior();\n    return super.getOptimisticResult(options);\n  }\n  fetchNextPage(options) {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: \"forward\" }\n      }\n    });\n  }\n  fetchPreviousPage(options) {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: \"backward\" }\n      }\n    });\n  }\n  createResult(query, options) {\n    const { state } = query;\n    const parentResult = super.createResult(query, options);\n    const { isFetching, isRefetching, isError, isRefetchError } = parentResult;\n    const fetchDirection = state.fetchMeta?.fetchMore?.direction;\n    const isFetchNextPageError = isError && fetchDirection === \"forward\";\n    const isFetchingNextPage = isFetching && fetchDirection === \"forward\";\n    const isFetchPreviousPageError = isError && fetchDirection === \"backward\";\n    const isFetchingPreviousPage = isFetching && fetchDirection === \"backward\";\n    const result = {\n      ...parentResult,\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, state.data),\n      hasPreviousPage: hasPreviousPage(options, state.data),\n      isFetchNextPageError,\n      isFetchingNextPage,\n      isFetchPreviousPageError,\n      isFetchingPreviousPage,\n      isRefetchError: isRefetchError && !isFetchNextPageError && !isFetchPreviousPageError,\n      isRefetching: isRefetching && !isFetchingNextPage && !isFetchingPreviousPage\n    };\n    return result;\n  }\n};\nexport {\n  InfiniteQueryObserver\n};\n//# sourceMappingURL=infiniteQueryObserver.js.map","\"use client\";\n\n// src/QueryClientProvider.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar QueryClientContext = React.createContext(\n  void 0\n);\nvar useQueryClient = (queryClient) => {\n  const client = React.useContext(QueryClientContext);\n  if (queryClient) {\n    return queryClient;\n  }\n  if (!client) {\n    throw new Error(\"No QueryClient set, use QueryClientProvider to set one\");\n  }\n  return client;\n};\nvar QueryClientProvider = ({\n  client,\n  children\n}) => {\n  React.useEffect(() => {\n    client.mount();\n    return () => {\n      client.unmount();\n    };\n  }, [client]);\n  return /* @__PURE__ */ jsx(QueryClientContext.Provider, { value: client, children });\n};\nexport {\n  QueryClientContext,\n  QueryClientProvider,\n  useQueryClient\n};\n//# sourceMappingURL=QueryClientProvider.js.map","\"use client\";\n\n// src/isRestoring.ts\nimport * as React from \"react\";\nvar IsRestoringContext = React.createContext(false);\nvar useIsRestoring = () => React.useContext(IsRestoringContext);\nvar IsRestoringProvider = IsRestoringContext.Provider;\nexport {\n  IsRestoringProvider,\n  useIsRestoring\n};\n//# sourceMappingURL=isRestoring.js.map","\"use client\";\n\n// src/QueryErrorResetBoundary.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createValue() {\n  let isReset = false;\n  return {\n    clearReset: () => {\n      isReset = false;\n    },\n    reset: () => {\n      isReset = true;\n    },\n    isReset: () => {\n      return isReset;\n    }\n  };\n}\nvar QueryErrorResetBoundaryContext = React.createContext(createValue());\nvar useQueryErrorResetBoundary = () => React.useContext(QueryErrorResetBoundaryContext);\nvar QueryErrorResetBoundary = ({\n  children\n}) => {\n  const [value] = React.useState(() => createValue());\n  return /* @__PURE__ */ jsx(QueryErrorResetBoundaryContext.Provider, { value, children: typeof children === \"function\" ? children(value) : children });\n};\nexport {\n  QueryErrorResetBoundary,\n  useQueryErrorResetBoundary\n};\n//# sourceMappingURL=QueryErrorResetBoundary.js.map","// src/utils.ts\nfunction shouldThrowError(throwError, params) {\n  if (typeof throwError === \"function\") {\n    return throwError(...params);\n  }\n  return !!throwError;\n}\nfunction noop() {\n}\nexport {\n  noop,\n  shouldThrowError\n};\n//# sourceMappingURL=utils.js.map","\"use client\";\n\n// src/errorBoundaryUtils.ts\nimport * as React from \"react\";\nimport { shouldThrowError } from \"./utils.js\";\nvar ensurePreventErrorBoundaryRetry = (options, errorResetBoundary) => {\n  if (options.suspense || options.throwOnError || options.experimental_prefetchInRender) {\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false;\n    }\n  }\n};\nvar useClearResetErrorBoundary = (errorResetBoundary) => {\n  React.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n};\nvar getHasError = ({\n  result,\n  errorResetBoundary,\n  throwOnError,\n  query\n}) => {\n  return result.isError && !errorResetBoundary.isReset() && !result.isFetching && query && shouldThrowError(throwOnError, [result.error, query]);\n};\nexport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary\n};\n//# sourceMappingURL=errorBoundaryUtils.js.map","// src/suspense.ts\nvar defaultThrowOnError = (_error, query) => query.state.data === void 0;\nvar ensureSuspenseTimers = (defaultedOptions) => {\n  if (defaultedOptions.suspense) {\n    if (defaultedOptions.staleTime === void 0) {\n      defaultedOptions.staleTime = 1e3;\n    }\n    if (typeof defaultedOptions.gcTime === \"number\") {\n      defaultedOptions.gcTime = Math.max(defaultedOptions.gcTime, 1e3);\n    }\n  }\n};\nvar willFetch = (result, isRestoring) => result.isLoading && result.isFetching && !isRestoring;\nvar shouldSuspend = (defaultedOptions, result) => defaultedOptions?.suspense && result.isPending;\nvar fetchOptimistic = (defaultedOptions, observer, errorResetBoundary) => observer.fetchOptimistic(defaultedOptions).catch(() => {\n  errorResetBoundary.clearReset();\n});\nexport {\n  defaultThrowOnError,\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch\n};\n//# sourceMappingURL=suspense.js.map","\"use client\";\n\n// src/useBaseQuery.ts\nimport * as React from \"react\";\nimport { isServer, notifyManager } from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nimport { useQueryErrorResetBoundary } from \"./QueryErrorResetBoundary.js\";\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary\n} from \"./errorBoundaryUtils.js\";\nimport { useIsRestoring } from \"./isRestoring.js\";\nimport {\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch\n} from \"./suspense.js\";\nimport { noop } from \"./utils.js\";\nfunction useBaseQuery(options, Observer, queryClient) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (typeof options !== \"object\" || Array.isArray(options)) {\n      throw new Error(\n        'Bad argument type. Starting with v5, only the \"Object\" form is allowed when calling query related functions. Please use the error stack to find the culprit call. More info here: https://tanstack.com/query/latest/docs/react/guides/migrating-to-v5#supports-a-single-signature-one-object'\n      );\n    }\n  }\n  const client = useQueryClient(queryClient);\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const defaultedOptions = client.defaultQueryOptions(options);\n  client.getDefaultOptions().queries?._experimental_beforeQuery?.(\n    defaultedOptions\n  );\n  defaultedOptions._optimisticResults = isRestoring ? \"isRestoring\" : \"optimistic\";\n  ensureSuspenseTimers(defaultedOptions);\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary);\n  useClearResetErrorBoundary(errorResetBoundary);\n  const isNewCacheEntry = !client.getQueryCache().get(defaultedOptions.queryHash);\n  const [observer] = React.useState(\n    () => new Observer(\n      client,\n      defaultedOptions\n    )\n  );\n  const result = observer.getOptimisticResult(defaultedOptions);\n  React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => {\n        const unsubscribe = isRestoring ? noop : observer.subscribe(notifyManager.batchCalls(onStoreChange));\n        observer.updateResult();\n        return unsubscribe;\n      },\n      [observer, isRestoring]\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult()\n  );\n  React.useEffect(() => {\n    observer.setOptions(defaultedOptions, { listeners: false });\n  }, [defaultedOptions, observer]);\n  if (shouldSuspend(defaultedOptions, result)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary);\n  }\n  if (getHasError({\n    result,\n    errorResetBoundary,\n    throwOnError: defaultedOptions.throwOnError,\n    query: client.getQueryCache().get(defaultedOptions.queryHash)\n  })) {\n    throw result.error;\n  }\n  ;\n  client.getDefaultOptions().queries?._experimental_afterQuery?.(\n    defaultedOptions,\n    result\n  );\n  if (defaultedOptions.experimental_prefetchInRender && !isServer && willFetch(result, isRestoring)) {\n    const promise = isNewCacheEntry ? (\n      // Fetch immediately on render in order to ensure `.promise` is resolved even if the component is unmounted\n      fetchOptimistic(defaultedOptions, observer, errorResetBoundary)\n    ) : (\n      // subscribe to the \"cache promise\" so that we can finalize the currentThenable once data comes in\n      client.getQueryCache().get(defaultedOptions.queryHash)?.promise\n    );\n    promise?.catch(noop).finally(() => {\n      observer.updateResult();\n    });\n  }\n  return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n}\nexport {\n  useBaseQuery\n};\n//# sourceMappingURL=useBaseQuery.js.map","\"use client\";\n\n// src/useQuery.ts\nimport { QueryObserver } from \"@tanstack/query-core\";\nimport { useBaseQuery } from \"./useBaseQuery.js\";\nfunction useQuery(options, queryClient) {\n  return useBaseQuery(options, QueryObserver, queryClient);\n}\nexport {\n  useQuery\n};\n//# sourceMappingURL=useQuery.js.map","\"use client\";\n\n// src/useInfiniteQuery.ts\nimport { InfiniteQueryObserver } from \"@tanstack/query-core\";\nimport { useBaseQuery } from \"./useBaseQuery.js\";\nfunction useInfiniteQuery(options, queryClient) {\n  return useBaseQuery(\n    options,\n    InfiniteQueryObserver,\n    queryClient\n  );\n}\nexport {\n  useInfiniteQuery\n};\n//# sourceMappingURL=useInfiniteQuery.js.map"],"names":["Subscribable","listener","isServer","noop","functionalUpdate","updater","input","isValidTimeout","value","timeUntilStale","updatedAt","staleTime","resolveStaleTime","query","resolveEnabled","enabled","matchQuery","filters","type","exact","fetchStatus","predicate","queryKey","stale","hashQueryKeyByOptions","partialMatchKey","isActive","matchMutation","mutation","status","mutationKey","hashKey","options","_","val","isPlainObject","result","key","a","b","replaceEqualDeep","array","isPlainArray","aItems","aSize","bItems","bSize","copy","equalItems","i","shallowEqualObjects","o","hasObjectPrototype","ctor","prot","sleep","timeout","resolve","replaceData","prevData","data","addToEnd","items","item","max","newItems","addToStart","skipToken","ensureQueryFn","fetchOptions","FocusManager","_a","__privateAdd","_focused","_cleanup","_setup","__privateSet","onFocus","__privateGet","setup","focused","isFocused","focusManager","OnlineManager","_online","onOnline","onlineListener","offlineListener","online","onlineManager","pendingThenable","reject","thenable","_resolve","_reject","finalize","reason","defaultRetryDelay","failureCount","canFetch","networkMode","CancelledError","isCancelledError","createRetryer","config","isRetryCancelled","isResolved","continueFn","cancel","cancelOptions","cancelRetry","continueRetry","canContinue","canStart","pause","continueResolve","run","promiseOrValue","initialPromise","error","retry","retryDelay","delay","shouldRetry","createNotifyManager","queue","transactions","notifyFn","callback","batchNotifyFn","scheduleFn","cb","schedule","flush","originalQueue","args","fn","notifyManager","Removable","_gcTimeout","newGcTime","Query","_Query_instances","_initialState","_revertState","_cache","_retryer","_defaultOptions","_abortSignalConsumed","getDefaultState","newData","__privateMethod","dispatch_fn","state","setStateOptions","promise","_b","observer","x","abortController","addSignalProperty","object","fetchFn","queryFn","queryFnContext","context","_c","onError","_d","action","reducer","fetchState","hasData","initialDataUpdatedAt","QueryCache","_queries","client","queryHash","queryInMap","defaultedFilters","queries","event","Mutation","_Mutation_instances","_observers","_mutationCache","variables","restored","isPaused","_f","_e","_h","_g","_j","_i","_l","_k","_n","_m","_p","_o","_r","_q","_t","_s","MutationCache","_mutations","_mutationId","__privateWrapper","scope","scopeFor","mutations","firstPendingMutation","m","foundMutation","pausedMutations","infiniteQueryBehavior","pages","direction","oldPages","oldPageParams","currentPage","cancelled","fetchPage","param","previous","page","maxPages","addTo","pageParamFn","getPreviousPageParam","getNextPageParam","oldData","remainingPages","pageParams","lastIndex","hasNextPage","hasPreviousPage","QueryClient","_queryCache","_queryDefaults","_mutationDefaults","_mountCount","_unsubscribeFocus","_unsubscribeOnline","defaultedOptions","cachedData","queryCache","refetchFilters","defaultedCancelOptions","promises","defaults","queryDefault","QueryObserver","_QueryObserver_instances","_client","_currentQuery","_currentQueryInitialState","_currentResult","_currentResultState","_currentResultOptions","_currentThenable","_selectError","_selectFn","_selectResult","_lastQueryWithDefinedData","_staleTimeoutId","_refetchIntervalId","_currentRefetchInterval","_trackedProps","shouldFetchOnMount","executeFetch_fn","updateTimers_fn","shouldFetchOn","clearStaleTimeout_fn","clearRefetchInterval_fn","notifyOptions","prevOptions","prevQuery","updateQuery_fn","mounted","shouldFetchOptionally","updateStaleTimeout_fn","nextRefetchInterval","computeRefetchInterval_fn","updateRefetchInterval_fn","shouldAssignObserverCurrentProperties","onPropTracked","trackedResult","prevResult","prevResultState","prevResultOptions","queryInitialState","newState","isPlaceholderData","fetchOnMount","fetchOptionally","errorUpdatedAt","selectError","placeholderData","isFetching","isPending","isError","isLoading","nextResult","isStale","finalizeThenableIfPossible","recreateThenable","pending","prevThenable","defaultNotifyOptions","shouldNotifyListeners","notifyOnChangeProps","notifyOnChangePropsValue","includedProps","typedKey","notify_fn","nextInterval","shouldLoadOnMount","field","optimisticResult","InfiniteQueryObserver","parentResult","isRefetching","isRefetchError","fetchDirection","isFetchNextPageError","isFetchingNextPage","isFetchPreviousPageError","isFetchingPreviousPage","QueryClientContext","React.createContext","useQueryClient","queryClient","React.useContext","QueryClientProvider","children","React.useEffect","jsx","IsRestoringContext","useIsRestoring","createValue","isReset","QueryErrorResetBoundaryContext","useQueryErrorResetBoundary","shouldThrowError","throwError","params","ensurePreventErrorBoundaryRetry","errorResetBoundary","useClearResetErrorBoundary","getHasError","throwOnError","ensureSuspenseTimers","willFetch","isRestoring","shouldSuspend","fetchOptimistic","useBaseQuery","Observer","isNewCacheEntry","React.useState","React.useSyncExternalStore","React.useCallback","onStoreChange","unsubscribe","useQuery","useInfiniteQuery"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24]}